# Reference genome
#     fasta: absolute path to reference FASTA file
#     index: does not need to be different from "fasta", but might be useful if 2-bit packed reference doesn't have .fa extension or is named differently
#     assets: prebuilt assets and scripts to build custom assets can be found at https://github.com/huishenlab/biscuit/releases/
ref:
    fasta: /varidata/researchtemp/hpctmp/biscuit_reference_hg38/EMseq_GRCh38.primary_assembly.genome.fa.gz
    index: /varidata/researchtemp/hpctmp/biscuit_reference_hg38/EMseq_GRCh38.primary_assembly.genome.fa.gz
    assets: /varidata/researchtemp/hpctmp/biscuit_reference_hg38/hg38_biscuit_assets

# Directory where raw FASTQs live, can be absolute path or path relative to Snakefile
fastqs: raw_data

# Samplesheet for specifying sample names and corresponding FASTQ files, can be absolute path or path relative to Snakefile
samples: config/samples.tsv

# Directory for writing analysis/ directory to (if '', write to same directory as Snakefile)
output_directory: ''

# Turn on/off read trimming, handle additional trim_galore options
#     trim_before_BISCUIT: run trimming (set as True) or not (set as False)
#     quality: trim low-quality ends from reads, in addition to adapter removal. Not done unless trim_before_BISCUIT == True
#     hard_trim_R2: --clip_R2 <int> argument from trim_galore. Must be integer. For swift kit, set this to 14 or 15. Not done unless trim_before_BISCUIT == True
trim_galore:
    trim_before_BISCUIT: False
    quality: 30
    hard_trim_R2: 15

# BISCUIT alignment options
#     biscuit_blaster_version: version of biscuitBlaster to run (specify either v1 or v2)
#     lib_type: biscuit align -b option (for directional vs non-directional alignment)
biscuit:
    biscuit_blaster_version: v1
    lib_type: 0

# Create a joint reference with ref['fasta'], lambda phage, and pUC19 genomes (lambda phage and pUC19 genomes proved in bin/)
# Lambda phage and pUC19 control vectors are only included in Illumina's NEBNextÂ® Enzymatic Methyl-seq Kit
# If True - create a joint reference and use this as reference during alignment and further processing
# If False - ref['fasta'] will be used as expected
build_ref_with_methylation_controls: False

# Calculate lambda phage and pUC19 methylation levels and create summary plot (output as <output_directory>/analysis/qc_vectors/control_vector_boxplot.pdf)
# Only useful if the ref genome included the control vectors with fasta headers >J02459.1 (lamdba / unmethylated control) and >M77789.2 (puc19 / methylated control). 
# The ref genome can be modified automatically to include these control vectors as the first two contigs by setting config["build_ref_with_methylation_controls"].
# If True - calculate methylation and create plot
# If False - skip this step
control_vectors: False

# Input data is from NOMe-seq
# If True - data is NOMe-seq data
# If False - data is WGBS or EM-seq
is_nome: False

# Run fastq_screen on data
# If True - run fastq_screen with --bisulfite mode (uses Bismark)
# If False - skip this step
run_fastq_screen: False # run fastq_screen with --bisulfite mode (uses Bismark)

# fastq_screen configure file path passed to --conf in fastq_screen
fastq_screen_conf: /primary/projects/bbc/references/fastq_screen/downloaded_20200309/FastQ_Screen_Genomes_Bisulfite/fastq_screen.conf

# Call SNPs with BISCUIT (True) or not (False)?
generate_snps: False

# Create epiBED files (True) or not (False)? Sets generate_snps to True if epiread is True
epiread: False

# Inputs to SAM read group in biscuit align
#     PL: platform/technology entry
#     PU: platform unit entry
#     LB: library preparation entry
sam_header:
    PL: il
    PU: nv
    LB: b1

# Environment modules paths used in "module load <string>" (pending you have a module system available)
# If your system does not use environmental modules, then executables for all of the modules must be in your PATH and
# each tool should be set to NULL (as shown below).
# If all dependency executables are in PATH and the module is specified with NULL, the workflow will still run with
# warnings that modules could not be loaded.
envmodules: 
    samtools: bbc/samtools/samtools-1.12
    R: bbc/R/R-4.1.0
    snakemake: bbc/snakemake/snakemake-6.1.0
    trim_galore: bbc/trim_galore/trim_galore-0.6.0
    #biscuit: bbc/biscuit/biscuit_1_0_0
    samblaster: bbc/samblaster/samblaster-0.1.26
    htslib: bbc/htslib/htslib-1.12
    bedtools: bbc/bedtools/bedtools-2.29.2
    fastqc: bbc/fastqc/fastqc-0.11.9
    multiqc: bbc/multiqc/multiqc-1.11
    parallel: bbc/parallel/parallel-20191122
    pigz: bbc/pigz/pigz-2.4
    fastq_screen: bbc/fastq_screen/fastq_screen-0.14.0
    bismark: bbc/bismark/bismark-0.23.0
    # if you e.g. don't have a module system then put the envmodules as follows:
    #~ samtools: NULL
    #~ R: NULL
    #~ snakemake: NULL
    #~ trim_galore: NULL
    biscuit: "NULL"
    #~ htslib: NULL
    #~ bedtools: NULL
    #~ fastqc: NULL
    #~ multiqc: NULL
    #~ parrallel: NULL
    #~ pigz: NULL
    #~ fastq_screen: NULL
    #~ bismark: NULL

# Memory and Thread parameters used when running on a cluster
#     maxThreads: number of threads to run biscuit align with
#     maxMemoryGb: high amount of memory to request
#     intermediateMemoryGb: middle amount of memory to request
#     smallMemoryGb: low amount of memory to request
#     trimThreads: number of threads to run trim_galore with
#     pileupThreads: number of threads to run biscuit pileup with
hpcParameters:
    maxThreads: 28
    maxMemoryGb: 245
    intermediateMemoryGb: 80
    smallMemoryGb: 20
    trimThreads: 8
    pileupThreads: 8

# Time to request when running on a cluster, names should be pretty self explanatory...
walltime:
    short: 1:00:00
    medium: 24:00:00
    long: 200:00:00


###########################################################################################
#### WARNING ///// STUFF BELOW HERE IS UNDER DEVELOPMENT AND NOT RECOMMENDED TO TURN ON
###########################################################################################

# Create sliding window, binned average methylation levels
#     run: calculate averages (True) otherwise skip (False)
#     covFilter: filter out CpGs with coverage less than covFilter
SlidingWindow:
    run: False
    covFilter: 10

# Subset merged BED and epiBED files to genomic features, including, CpG islands, shores, shelves, and open seas
#     run: subset BEDs (True) or skip (False)
SubsetToFeatures:
    run: True
